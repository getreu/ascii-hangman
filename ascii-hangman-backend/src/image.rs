//! Holds a dictionary of built-in ASCII art images and manages the piecemeal disclosure to the
//! image.  Also parses user provided images if given in the configuration file.

use crate::dictionary::ConfigParseError;
use crate::game::Game;
use crate::LIVES;
use rand::seq::SliceRandom;
use rand::thread_rng;
use serde_derive::Deserialize;
use std::cmp::{Ord, Ordering};
use std::fmt;

/// Identifier tagging image data in configuration files.
pub const CONF_LINE_IDENTIFIER__IMAGE: char = '|';

/// Tags control common lines in the configuration file.
pub const CONF_LINE_IDENTIFIER__CONTROL: char = ':';

/// Default game mode. Can be changed in the configuration file.
const DEFAULT_REWARDING_SCHEME: RewardingScheme = RewardingScheme::UnhideWhenGuessedChar;

/// Keyword in the configuration file to switch rewarding scheme in the enum `RewardingScheme`
/// to `UnHideWhenLostLife`
const UNHIDE_WHEN_LOST_LIVE_IDENTIFIER: &str = "traditional-rewarding";

/// Keyword in the configuration file to switch rewarding scheme in the enum `RewardingScheme`
/// to `UnHideWhenGuessedChar`
const UNHIDE_WHEN_GUESSED_CHAR_IDENTIFIER: &str = "success-rewarding";

/// Threshold to decide from how many characters on the images is considered to be "big".
/// Big images are disclosed with another algorithm.
/// This is just big enough that the gallow image stays small.
const BIG_IMAGE: usize = 60; // sort algorithm <-> random algorithm

/// When disclosing an image, the signature is shown last.
/// `str` must be at least 3 characters an not longer
/// than 10!
#[cfg(not(test))]
const IMAGE_KNOWN_SIGNATURES: &[&str] = &[
    " VK", "VK ", "hjw", " ac", "ac ", "jgs", "snd", "mrf", "hjw", "DR J", "fsc", "ejm", "ejm98",
    " hh", "hh ", "jrei", "b'ger", "wtx", "fsc", "Asik", "Phs",
];
#[cfg(test)]
const IMAGE_KNOWN_SIGNATURES: &[&str] = &["jens", "lis"];

/// A collection of built-in images from whom one is chosen at the start of the game.
// first char of image lines must be '|'
const DEFAULT_IMAGES: &[&str] = &[
    r#"image: |1
     ,,,,,
    (o   o)
     /. .\
    (_____)
      : :
     ##O##'
   ,,,: :,,,
  _)\ : : /(____
 {  \     /  ___}
  \/)     ((/
   (_______)
     :   :
     :   :
    / \ / \
    """ """
"#,
    r#"image: |1
     |\_|X|_/|
    /         \
  =(  O     O  )=
   -\    o    /-
    / .-----. \
  /_ | o   o |_ \
 (U  |       |  U)
    _|_     _|_
   (   )---(   )
"#,
    r#"image: |1
         _.---._    /\\
      ./'       "--`\//
    ./              o \
   /./\  )______   \__ \
  ./  / /\ \   | \ \  \ \
     / /  \ \  | |\ \  \7
      "     "    "  "        VK
"#,
    r#"image: |1
        ,.
       (_|,.
      ,' /, )_______   _
   __j o``-'        `.'-)'
  (")                 \'
   `-j                |
     `-._(           /
 hjw    |_\  |--^.  /
       /_]'|_| /_)_/
          /_]'  /_]'
"#,
    r#"image: |1
         _
        [ ]
       (   )
        |>|
     __/===\__
    //| o=o |\\
  <]  | o=o |  [>
      \=====/
     / / | \ \
    <_________>
"#,
    r#"image: |1
                           (_)(_)
                           /     \
                          /       |
                         /   \  * |
           ________     /    /\__/
   _      /        \   /    /
  / \    /  ____    \_/    /
 //\ \  /  /    \         /
 V  \ \/  /      \       /
     \___/        \_____/
"#,
    r#"image: |1
          .-.
         (. .)__,')
         / V      )
   ()    \  (   \/
 <)-`\()  `._`._ \
   <).>=====<<==`'====
    C-'`(>          hjw
# Author: hjw
"#,
    r#"image: |1
  >(. )
   |  (     /)
   |   \___/ )
   (   ----- )  >@)_//   >@)_//  >@)_//  >@)_//
    \_______/    (__)     (__)    (__)    (__)
 ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
"#,
    r#"image: |1
            __
            /(`o
      ,-,  //  \\
     (,,,) ||   V
    (,,,,)\//
    (,,,/w)-'
    \,,/w)
    `V/uu
      / |
      | |
      o o
      \ |
 \,/  ,\|,.  \,/
"#,
    r#"image: |1
 o
  \_/\o
 ( Oo)                    \|/
 (_=-)  .===O-  ~~Z~A~P~~ -O-
 /   \_/U'                /|\
 ||  |_/
 \\  |
 {K ||
  | PP
  | ||
  (__\\  ac
# Author: ac
"#,
    r#"image: |1
       ______
      /     /\
     /     /  \
    /_____/----\_    (
   "     "          ).
  _ ___          o (:') o
 (@))_))        o ~/~~\~ o
                 o  o  o
"#,
    r#"image: |1
                              _______     |\
                             |License|    | \
   _____                     | ~~*~~ |    |  \
  |     |  (((        .--.   |_______|    |
  |DrJRO| ~OvO~ __   (////)               |
  |     | ( _ )|==|   \__/                |
  |o    |  \_/ |_(|  /    \   _______     |
  |     | //|\\   \\//|  |\\  |__o__|     |
  |   __|//\_/\\ __\/ |__|//  |__o__|     |
  |  |==""//=\\""====|||||)   |__o__|     |
 _|__||_|_||_||_____||||||____|__o__|_____|
     ||  (_) (_)    ||||||                \
     []             [(_)(_)
"#,
    r#"image: |1
    _     _
   ( |_ _| )
    ( .". )
   _( (Y) )_
  / /,---.\ \
 / / | + | \ \
 \_)-"   "-(_/
   |_______|
   _)  |  (_
  (___,'.___)  hjw
# Art by Hayley Jane Wakenshaw
# (slightly modified)
"#,
    r#"image: |1
           |
         \ _ /
       -= (_) =-
         /   \         _\/_
           |           //o\  _\/_
    _____ _ __ __ ____ _ | __/o\\ _
  =-=-_-__=_-= _=_=-=_,-'|"'""-|-,_
   =- _=-=- -_=-=_,-"          |
 jgs =- =- -=.--"
# Art by Genoveva Galarza
"#,
    r#"image: |1
         __I__
    .-'"  .  "'-.
  .'  / . ' . \  '.
 /_.-..-..-..-..-._\ .---------------------------------.
          #  _,,_   ( I hear it might rain people today )
          #/`    `\ /'---------------------------------'
          / / 6 6\ \
          \/\  Y /\/       /\-/\
          #/ `'U` \       /a a  \               _
        , (  \   | \     =\ Y  =/-~~~~~~-,_____/ )
        |\|\_/#  \_/       '^--'          ______/
        \/'.  \  /'\         \           /
         \    /=\  /         ||  |---'\  \
    jgs  /____)/____)       (_(__|   ((__|
# Art by Joan Stark
"#,
    r#"image: |1
  [][][] /""\ [][][]
   |::| /____\ |::|
   |[]|_|::::|_|[]|
   |::::::__::::::|
   |:::::/||\:::::|
   |:#:::||||::#::|
  #%*###&*##&*&#*&##
 ##%%*####*%%%###*%*#
"#,
    r#"image: |1
   ,-~~-.___.
  / |  '     \
 (  )         0
  \_/-, ,----'
     ====           //
    /  \-'~;    /~~~(O)
   /  __/~|   /       |
 =(  _____| (_________|
"#,
    r#"image: |1
   \,`/ /
  _)..  `_
 ( __  -\
     '`.
    ( \>_-_,
    _||_ ~-/    W<
"#,
    r#"image: |1
             __:.__
            (_:..'"=
             ::/ o o\         AHAH!
            ;'-'   (_)     Spaceman Spiff      .
            '-._  ;-'        wins again !  _'._|\/:
            .:;  ;                .         '- '   /_
           :.. ; ;,                \       _/,    "_<
          :.|..| ;:                 \__   '._____  _)
          :.|.'| ||                            _/ /
 snd      :.|..| :'                           `;--:
          '.|..|:':       _               _ _ :|_\:
       .. _:|__| '.\.''..' ) ___________ ( )_):|_|:
 :....::''::/  | : :|''| "/ /_=_=_=_=_=/ :_[__'_\3_)
  ''''      '-''-'-'.__)-'
# Art by Shanaka Dias
"#,
    r#"image: |1
   _,                          _
 .'  `.                  ___.>"''-..-.
 `-.   ;           .--"""        .-._@;
    ;  !_.--..._ .'      /     .[_@'`'.
   ;            /       : .'  ; :_.._  `.
   :           ;        ;[   _T-"  `.'-. `-.
    \        .-:      ; `.`-=_,88p.   _.}.-"
     `-.__.-'   \    /L._ Y",P$T888;  ""
              .-'_.-'  / ;$$$$$$]8P;
              \ /     / / "Y$$P" ^"
      fsc      ;\_    `.\_._
               ]__\     \___;
"#,
    r#"image: |1
         _
       _<_/_
    __/    _>
   '\  '  |
     \___/
     /+++\
  o=|..|..|
    | o/..|
 0==|+++++|
  0======/
"#,
    r#"image: |1
         _../|_
       ='__   _~-.
            \'  ~-`\._
                  |/~`
    .    .    .    .    .
 _.`(._.`(._.`(._.`(._.`(._
"#,
    r#"image: |1
                         ____
                    .---'-    \
       .-----------/           \
      /           (         ^  |   __
 &   (             \        O  /  / .'
 '._/(              '-'  (.   (_.' /
      \                    \     ./
       |    |       |    |/ '._.'
        )   @).____\|  @ |
    .  /    /       (    | mrf
   \|, '_:::\  . ..  '_:::\ ..\).
# Art by Morfina
"#,
    r#"image: |1
            __n__n__
     .------`-\00/-'
    /  ##  ## (oo)
   / \## __   ./
      |//YY \|/
 snd  |||   |||
# Art by Shanaka Dias
"#,
    r#"image: |1
                        .-'~~~-.
                      .'o  oOOOo`.
                     :~~~-.oOo   o`.
                      `. \ ~-.  oOOo.
                        `.; / ~.  OO:
                        .'  ;-- `.o.'
                       ,'  ; ~~--'~
                       ;  ;
 _______\|/__________\\;_\\//___\|/________
"#,
    r#"image: |1
     ____
    (__  '.
     /_____)
    ()@ @ )))
     'C ,()(()
     ,.'_'.' \
  __/ )   (--'
 '._./     \
    (_._._._)
     _|| ||_
 mrf(__.).__)
"#,
    r#"image: |1
         o    .   _     .
           .     (_)         o
    o      ____            _       o
   _   ,-/   /)))  .   o  (_)   .
  (_)  \_\  ( e(     O             _
  o       \/' _/   ,_ ,  o   o    (_)
   . O    _/ (_   / _/      .  ,        o
      o8o/    \\_/ / ,-.  ,oO8/( -TT
     o8o8O | } }  / /   \Oo8OOo8Oo||     O
    Oo(""o8"""""""""""""""8oo""""""")
   _   `\`'                  `'   /'   o
  (_)    \                       /    _   .
       O  \           _         /    (_)
 o   .     `-. .----<(o)_--. .-'
    --------(_/------(_<_/--\_)--------hjw
"#,
    r#"image: |1
                 \||/
                 |  @___oo
       /\  /\   / (__,,,,|
      ) /^\) ^\/ _)
      )   /^\/   _)
      )   _ /  / _)
  /\  )/\/ ||  | )_)
 <  >      |(,,) )__)
  ||      /    \)___)\
  | \____(      )___) )___
   \______(_______;;; __;;;
"#,
    r#"image: |1
    (\{\
    { { \ ,~,
   { {   \)))  *
    { {  (((  /
     {/{/; ,\/
        (( '
         \` \
         (/  \
 ejm     `)  `\
"#,
    r#"image: |1
                     /
                ,.. /
              ,'   ';
   ,,.__    _,' /';  .
  :','  ~~~~    '. '~
 :' (   )         )::,
 '. '. .=----=..-~  .;'
  '  ;'  ::   ':.  '"
    (:   ':    ;)
     \\   '"  ./
      '"      '"
                DR J
"#,
    r#"image: |1
      __/\__
 . _  \\''//
 -( )-/_||_\
  .'. \_()_/
   |   | . \
   |mrf| .  \
  .'. ,\_____'.
"#,
    r#"image: |1
          _.-.
        ,'/ //\
       /// // /)
      /// // //|
     /// // ///
    /// // ///
   (`: // ///
    `;`: ///
    / /:`:/
   / /  `'
  / /
 (_/  hh
"#,
    r#"image: |1
  _____
 |A .  | _____
 | /.\ ||A ^  | _____
 |(_._)|| / \ ||A _  | _____
 |  |  || \ / || ( ) ||A_ _ |
 |____V||  .  ||(_'_)||( v )|
        |____V||  |  || \ / |
               |____V||  .  |
                      |____V| ejm98
"#,
    r#"image: |1
       !!!!\\\\
     '`!_  ||||
      ` \`-'''|
        `\   /
         )\  \
  ejm   /  \  \
            \|
"#,
    r#"image: |1
   ,~~--~~-.
  +      | |\
  || |~ |`,/-\
  *\_) \_) `-'#,
"#,
    r#"image: |1
   (.  \
    \  |
     \ |___(\--/)
   __/    (  . . )
  "'._.    '-.O.'
       '-.  \ "|\
          '.,,/'.,,mrf
"#,
    r#"image: |1
              __
    ,'```--'''  ``-''-.
  ,'            ,-- ,-'.
 (//            `"'| 'a \
   |    `;         |--._/
   \    _;-._,    /
    \__/\\   \__,'
     ||  `'   \|\\
     \\        \\`'
 hjw  `'        `'
"#,
    r#"image: |1
 \\             //
  \\\' ,      / //
   \\\//,   _/ //,
    \_-//' /  //<,
      \ ///  <//`
     /  >>  \\\`__/_
    /,)-^>> _\` \\\
    (/   \\ //\\
        // _//\\\\
       ((` ((
"#,
    r#"image: |1
 >o)
 (_>   <o)
       (_>
"#,
    r#"image: |1
               I~
           I~ /V\  I~
       I~ /V\ | | /V\  I~
  @ @ /V\ | |_|_|_| | /V\ @ @
 @@@@@| |_| |_/V\_| |_| |@@@@@
 @@@@@| | |_|_|_|_|_| | |@@@@@
 @@@@@|_|_V_V|   |V_V_|_|@@@@@
 _._._._._._._._._._._._._._._
 :::::::::::::|X|:::::::::::::
 Sher^
"#,
    r#"image: |1
  W                   __
 [ ]                 |::|
  E          ._.     |::|   ._.
  |\         |:| ._. |::|   |/|
  \ \\|/     |:|_|/| |::|_  |/|
   |-( )-    |:|"|/|_|::|\|_|/| _
   | V L     |:|"|/|||::|\|||/||:|
   \    `  ___   ~~~~~~~~~~~~~~~~~~~~
    |    \/  /     ~~~~ ~~~~ ~~~ ~~~
"#,
    r#"image: |1
       .___.
      /     \
     | O _ O |
     /  \_/  \
   .' /     \ `.
  / _|       |_ \
 (_/ |       | \_)
     \       /
    __\_>-<_/__
    ~;/     \;~
"#,
    r#"image: |1
     ,--.
     \  _\_
     _\/_|_\____.'\
   -(___.--._____(
        \   \
         \   \
          `--'
   jg
"#,
    r#"image: |1
    _..__.          .__.._
   .^"-.._ '-(\__/)-' _..-"^.
          '-.' oo '.-'
             `-..-'       fsc
"#,
    r#"image: |1
                           .
                       _.:/ )
     _              .-Q      `._
  '\(o7/'         o(.__         '-.
  `.( ).'           `_/    )
     H       ._      '-._.'         kOs
     w       ( \         /
              \ '.     .'   )
"#,
    r#"image: |1
    .
   / \__        .. _
   \.'  '._o    \_|_) ))
 __(  __ / /      ).
 \  _( ,/ /.____.' /
  '' '..-'        |
         \    _   (
          )v /-'._ )
         ////   |//
        // \\   //
       //   \\ ||\\
    --"------"-"--"--  mrf
"#,
    r#"image: |1
    a'!   _,,_   a'!   _,,_     a'!   _,,_
      \\_/    \    \\_/    \      \\_/    \.-,
       \, /-( /'-,  \, /-( /'-,    \, /-( /
       //\ //\\     //\ //\\       //\ //\\
 jrei
"#,
    r#"image: |1
       ,__,
  (/__/\oo/\__(/
    _/\/__\/\_
     _/    \_    b'ger
"#,
    r#"image: |1
           (    )
            (oo)
   )\.-----/(O O)
  # ;       / u
    (  .   |} )
     |/ `.;|/;
     "     " "
#unknown
"#,
    r#"image: |1
                 __
                /\/'-,
        ,--'''''   /"
  ____,'.  )       \___
 '"""""------'"""`-----'
#pb
"#,
    r#"image: |1
           _
    ______/ \-.   _         _ __ _         _    _
 .-/     (    o\_//        / |..| \       / >--< \
  |  ___  \_/\---'         \/ || \/       \|  \ |/
  |_||  |_||       wtx      |_''_|         |_||_|
"#,
    r#"image: |1
                     _J""-.
        .-""L_      /o )   \ ,';
   ;`, /   ( o\     \ ,'    ;  /
   \  ;    `, /      "-.__.'"\_;
   ;_/"`.__.-"
                               fsc
"#,
    r#"image: |1
        >=<                >=<
   ,.--'  ''-.        ,.--'  ''-.
   (  )  ',_.'        (  )  ',_.'
    Xx'xX              mn'mn`
                              Asik
"#,
    r#"image: |1
         .-' '-.
        /       \
       |,-,-,-,-,|
      ___   |
     _)_(_  |
     (/ \)  |
     _\_/_  /)
    / \_/ \//
    |(   )\/
    ||)_(
    |/   \
    n|   |
   / \   |
   |_|___|
      \|/
 jgs _/L\_
"#,
    r#"image: |1
   oo`'._..---.___..-
  (_,-.        ,..'`
       `'.    ;
          : :`
         _;_;      jrei
"#,
    r#"image: |1
        `.oo'    |    `oo.'
     ,.  (`-'    |    `-')  ,.
    '^\`-' )     |     ( `-'/^`
       c-L'-     |     -`_-)
 -bf-
"#,
    r#"image: |1
        .___,
     ___('v')___
     `"-\._./-"'
 hjm     ^ ^
"#,
    r#"image: |1
            __,---.__
         ,-'         `-.__
       &/           `._\ _\
       /               ''._
       |   ,             (")
  jrei |__,'`-..--|__|--''
"#,
    r#"image: |1
     ;     /        ,--.
    ["]   ["]  ,<  |__**|
   /[_]\  [~]\/    |//  |
    ] [   OOO      /o|__|   Phs
"#,
    r#"image: |1
        |
   m1a  |
        |
    /   |   \
    \   |   /
  .  --\|/--  ,
   '--|___|--'
   ,--|___|--,
  '  /\o o/\  `
    +   +   +
     `     '
"#,
    r#"image: |1
         ___`\`,`.
    ()    `-.--. |.
     \`-.-(e(e.' .1
      ;.___..~   _")
     <./|_|`-~.   |
               \  |
                | |
                | |
      (PS)      | /\
"#,
    r#"image: |1
        O>         _
       ,/)          )_
   -----<---<<<   )   )
        ``      ` _)
                 jrei
"#,
    r#"image: |1
     _|\_
      ("}
   i_.-@-._ _
   8--,  .-`*
   I  /==\
   I  |   \
   I  /___\
 snd
"#,
    r#"image: |1
  ,__ ., __, ,,,,
  '--/,,\--'\*\%\*\
    //  \\\'\'%.\'%\
     '..'//'%\.\%/\\'.^
        \\'/'/%''/\'
          ||     ||
          "      "
#morfina
"#,
    r#"image: |1
      .------------------....___       ,;;;,
     /                      /  /'''---/;;;;;;,.,
 jgs \                      \__\...---\;;;;;;;"
      '------------------''''           ````
"#,
    r#"image: |1
       _______________________
      /   //=================/`"-._
     |   ||=================|      D
 jgs  \___\\_________________\__.-"
"#,
    r#"image: |1
      _________________________________________________
     |'|'|'|'|'|'|'|'|'|'|'|'|'|'|'|'|'|'|'|'|'|'|'|'|'|
 jgs |___1___2___3___4___5___6___7___8___9__10__11__12_|



"#,
    r#"image: |1
            _________________
    .--H--.|             jgs |
  _//_||  ||                 |
 [    -|  |'--;--------------'
 '-()-()----()"()^^^^^^^()"()'
"#,
    r#"image: |1
                 ___
      .--.      [ATM]
 .----'   '--.    |
 '-()-----()-'    |
"#,
    r#"image: |1
           .---;-,
        __/_,{)|__;._
     ."` _     :  _  `.  .:::;.    .::'
 jgs '--(_)------(_)--' `      '::'
"#,
    r#"image: |1
                (
                            )
 .------.------------------.
 |-_- = |                  #
 '------'------------------'
"#,
    r#"image: |1
   oOOOOOo
  ,|    oO
 //|     |
 \\|     |
   `-----`
"#,
    r#"image: |1
      _*
 .---/ `\
 |~~~~|`'
  \  /
   )(
  /__\
"#,
    r#"image: |1
  _
 | |
 |~|
 \_/
  |
 _|_
"#,
    r#"image: |1
        ,,
      W ()      , `)
      |-><       )  ,
 jgs  | )(\_v   (, ` )
"#,
    r#"image: |1
     -    C                 ,  .-.___
   -     /<               @/  /xx\XXX\
  -   __/\ `\            \/\  |xx|XXX|
     `    \, \_ =        _\<< |xx|XXX|
 jgs"""""""""""""""""""""""""""""""""""
"#,
    r#"image: |1
     .-.  .-.
    |   \/   |
    \        /
     `\    /`
 jgs   `\/`
"#,
    r#"image: |1
         __ __ __ __ __
       /__/__/__/__/__/|
      /__/__/__/__/__/|/
  jgs |__'__'__'__'__|/
"#,
    r#"image: |1
       __.-n-.
       \|'---'|-,
        |     | ))
        |     |-'
 jgs    '.___.'
"#,
    r#"image: |1
              ___
      `-._\ /     `~~"--.,_
     ------>|              `~~"--.,_
 jgs  _.-'/ '.____,,,,----"""~~```'
"#,
    r#"image: |1
     .--.
    /.-. '----------.
    \'-' .--"--""-"-'
 jgs '--'
"#,
    r#"image: |1
       _..._
     .'     '.
    /_.=._.=._\
    \  \   /  /
 jgs '.__.__.'
"#,
    r#"image: |1
       _   _
     .' `"` '.
    /_       _\
    \ `--`--` /
 jgs '.__.__.'
"#,
    r#"image: |1
     .-.
    ( . )
  .-.':'.-.
 (  =,!,=  )
  '-' | '-'
"#,
    r#"image: |1
      9::::=======
      |::::=======
      |===========
 jgs  |===========
"#,
    r#"image: |1
             ,--,_
      __    _\.---'-.
      \ '.-"     // o\
 jgs  /_.'-._    \\  /
             `"--(/"`
"#,
    r#"image: |1
             _,--,
          .-'---./_    __
         /o \\     "-.' /
         \  //    _.-'._\
 jgs      `"\)--"`
"#,
    r#"image: |1
   .=========.
  / (_)  (_) /|
 /-========-/ |
 |          |/
 '-========-'
"#,
    r#"image: |1
          .-.-.
       _ /     \ _
      / `\=====/` \
 jgs  '.__`---`__.'
"#,
    r#"image: |1
      _, ____
     \_ `  , `P
       |/--\ /
 jgs  "`   "`
"#,
    r#"image: |1
            _.._    _
          ."\__/"./`_\
        _/__<__>__\/
 jgs   `"/_/""""\_\\
"#,
    r#"image: |1
               _ __            _ __
              (_|_ '.         (_|_ '.
                  '-'             '-'
       _ _.-.         _ _.-.
 jgs  (_|__.'        (_|__.'
"#,
    r#"image: |1
      <(__)> | | |
      | \/ | \_|_/
      \^  ^/   |
      /\--/\  /|
 jgs /  \/  \/ |
"#,
    r#"image: |1
             ___
       ___ /`"""`8-.__
     /`"""`8-.__._    )
     \   ._     ) """""
 jgs """"  """"""
"#,
    r#"image: |1
      .---.        __
     /     '-.__.-'  `'-.
     \     .-'           '.__.'
 jgs  '---'
"#,
    r#"image: |1
      _
   __|_\_
 =u__.-.__)
    /_/
"#,
    r#"image: |1
          _h___   I
       __[_]___\_[]=_
       \,           /
  jgs^V^V^V^V^V^V^V^V^V^V^^''''""
"#,
    r#"image: |1
        _..-.._           *
   *  .'_/ _ \_'.
     /_ _| __|_ _\___  *
     | _ |_ _| _ |  /\
 jgs |___|___J___|__\/
"#,
    r#"image: |1
          _
       _.-H-._       _.-""-._
    .='_______'=. .=' _   _  '=.
     ||       ||[+]|_[X]__[X]_|_
 jgs_||_______||___[=_=-_-=_-=_=]
"#,
    r#"image: |1
  (`\/)
  _\|/
 (_X_,B
"#,
    r#"image: |1
              c._
    ."````"-"C  o'-.
  _/   \       _..'
 '-\  _/--.<<-'
    `\)     \)  jgs
"#,
    r#"image: |1
      _V_
     /___\
    |  |  |
    \o | o/
 jgs '-.-'
"#,
    r#"image: |1
             +
           .-"-.
          / RIP \
          |     |
     jgs \\  ___|//
"#,
    r#"image: |1
       .-""-.
      /)    (\   ,;;;,
      ( ' \' )  // \\\\
       \  = /   ( ' ' )
 jgs    )--(     \_=_/
"#,
    r#"image: |1
  \_(\_\
     \\_
    <`\\>
       ))
 jgs   (
"#,
    r#"image: |1
       __
      <- )
      /( \
      \_\_>
 jgs  " "
"#,
    r#"image: |1
        __
       ( ->
       / )\
      <_/_/
 jgs   " "
"#,
    r#"image: |1
      __ >>>
     (__)(_)()=
         >>>
 jgs      __ >>>
         (__)(_)()=
             >>>
"#,
    r#"image: |1
           .--.
     (\_/)/  _ \
     (o.o) _(   |____
    .- ".-`----'`"""")
 jgs             '--`
"#,
    r#"image: |1
             ()
         []_/<
          \-=\
      jgs _)(/_
"#,
    r#"image: |1
            ,;:'`'::'
         __||
   _____/LLLL\_
   \__________"|
 ~^~^~^~^~^~^~^~^~^~
"#,
    r#"image: |1
                       __T__I___...__7~
         ,_           `"|-=||==|==|==|
         [_`'---...,____|"_||__|__|__|_
         | `'---...__PHILOMENA D_______]
 jgs^~-~^-^~^'----~^~---~---------~^---'`~^-^~~^
"#,
    r#"image: |1
          __
       | /  \ |
      \_\\  //_/
       .'/()\'.
 jgs    \\  //
"#,
    r#"image: |1

       //  \\
      _\\()//_
     / //  \\ \
 jgs  | \__/ |
"#,
    r#"image: |1
  __
 /o \_____
 \__/-="="`
"#,
    r#"image: |1
       __
      / o\
      \_ /
       <|
       <|
  jgs  <|
        `
"#,
    r#"image: |1
   _ (.".) _
  '-'/. .\'-'
    ( o o )
 jgs `"-"`
"#,
    r#"image: |1
  __QQ
 (_)_">
 _)
"#,
    r#"image: |1
   /\-/\    /\-/\    /\-/\
  (=^Y^=)  (=^Y^=)  (=^Y^=)
   (>o<)    (>o<)    (>o<)
"#,
    r#"image: |1
                                                ________  h___
         __        __      _____       ___     |        | |  L|_
       _/ L\__   _| L\__  |    L\_   _/  L\__  |        |_|     |
      '-o---o-' '-o---o-' '-O---O-' '=o----o-' '-OO----`OO----O-'
 ^jgs^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
"#,
    r#"image: |1
      .,.,.,.,.,.,.
     [_           _]
     | '-.     .-' |
      \   \   /   /
 jgs   '.__\_/__.'
"#,
    r#"image: |1
            ____.-==-, _______  _______  _______  _______  _..._
           {"""""LILI|[" " "'"]['""'"""][''""''']["" """"][LI LI]
  ^#^#^#^#^/_OO====OO`'OO---OO''OO---OO''OO---OO''OO---OO`'OO-OO'^#^#^#^
 ^^^jgs^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
"#,
    r#"image: |1
         __         .' '.
       _/__)        .   .       .
      (8|)_}}- .      .        .
 jgs   `\__)    '. . ' ' .  . '
"#,
    r#"image: |1
           .' '.            __
  .        .   .           (__\_
   .         .         . -{{_(|8)
     ' .  . ' ' .  . '     (__/`
 jgs
"#,
    r#"image: |1
         _....._
 '.  .-'`     | `.
   ><---------|---)
 .'  `-.,_    |_,'
  jgs     `````
"#,
    r#"image: |1
       _....._
     .' |     `'-.  /
    (---|---------><
     '._|    _,.-'  \
 jgs     `````
"#,
    r#"image: |1
          _....._
        .'       `'-.  /
       (- J-E-S-U-S -><
        '._     _,.-'  \
 jgs       `````
"#,
    r#"image: |1
        _,..=xxxxxxxxxxxx,
       /L_Y.-"""""""""`,--n.
       .--'[=======]|L]J: []\
       |/ _ ''_ " " ||[ -_ 4 |
 jgs   '-(_)-(_)----'v'-(_)--'
"#,
    r#"image: |1
              _....._
      '.  .-'`       `.
        >< D A R W I N )
      .'  `-.,_     _,'
 jgs           `L`L`
"#,
    r#"image: |1
           _
          `-)
        8__/__
 jgs      (___)
"#,
    r#"image: |1
             _
            (-`
        "",  \
 jgs     (____)
"#,
    r#"image: |1
           .-""-.
          ((````)) .=.
        8  \\  // /._.`-
        \.__))((_//
 jgs     '--'  '-'
"#,
    r#"image: |1
       _ .-. _
      /o`\^/`o\
     |o o | o o|
      \o _|_ o/
 jgs   `(@I@)`
"#,
    r#"image: |1
        _   |~  _
       [_]--'--[_]
       |'|""`""|'|
       | | /^\ | |
 jgs   |_|_|I|_|_|
"#,
    r#"image: |1
                ,:',:`,:'
             __||_||_||_||__
        ____["""""""""""""""]____
        \ " '''''''''''''''''''' \
 ~~jgs~^~^~^^~^~^~^~^~^~^~^~~^~^~^^~~^~^
"#,
    r#"image: |1
         ,.----------.
        ((|          |
       .--\          /--.
      '._  '========'  _.'
 jgs     `""""""""""""`
"#,
    r#"image: |1
      _______
    .'_/_|_\_'.
    \`\  |  /`/
     `\\ | //'
 jgs   `\|/`
"#,
    r#"image: |1
                 /\__
        .--.----'  - \
       /    )    \___/
      |  '------.___)
 jgs   `---------`
"#,
    r#"image: |1
         _  m
       ,`.\/'>
       (`\<_/`
 jgs     `<<
"#,
    r#"image: |1
       .-.
     _( " )_
    (_  :  _)
      / ' \
 jgs (_/^\_)
"#,
    r#"image: |1
                                                     __.  .--,
 *-/___,  ,-/___,-/___,-/___,-/___,           _.-.=,{\/ _/  /`)
  `\ _ ),-/___,-/___,-/___,-/___, )     _..-'`-(`._(_.;`   /
   /< \\=`\ _ )`\ _ )`\ _ )`\ _ )<`--''`     (__\_________/___,
          /< <\ </ /< /< /< </ /<           (_____Y_____Y___,  jgs
"#,
    r#"image: |1
                                              __.  ,--,
   .-/___,-/___,-/___,-/___,           _.-.=,{\/ _/  /`)
 .-/___,-/___,-/___,-/___, )     _..-'`-(`._(_.;`   /
  `\ _ )`\ _ )`\ _ )`\ _ )<`--''`     (__\_________/___,
   /< <\ </ /< /< /< </ /<           (_____Y_____Y___,  jgs
"#,
    r#"image: |1
                       ,
        ,_     ,     .'<_
       _> `'-,'(__.-' __<
       >_.--(.. )  =;`
 jgs        `V-'`'\/``
"#,
    r#"image: |1
             .---. /)
           .'     `\/)
          /  _   .'`/|
 jgs   ,=(  __\ (__/_/==,
      `==================`
"#,
    r#"image: |1
       O      ~O
      <|\     /|\
       |   ~o/ | \o    ~o/    _o
       |\  /|  |\ |\   /|      |\
 jgs  / |  / \ |// >   / \    / >
"#,
    r#"image: |1
            ~O
            /|\
         ~o/ | \o    ~o/    _o
         /|  |\ |\   /|      |\
 jgs     / \ |// >   / \    / >
"#,
    r#"image: |1
          \--/
       /`-'  '-`\
      /          \
     /.'|/\  /\|'.\
 jgs       \/
"#,
    r#"image: |1
        (,_    ,_,    _,)
        /|\`-._( )_.-'/|\
       / | \`'-/ \-'`/ | \
      /  |_.'-.\ /.-'._|  \
 jgs /_.-'      "      `-._\
"#,
    r#"image: |1
       _
      /\`--.
     |o-|   )>=====o
 jgs  \/.--'
"#,
    r#"image: |1
       _   __    _   __
      ( `^` ))  ( `^` ))
      |     ||  |     ||
      |     ||  |     ||
 jgs  '-----'`  '-----'`
"#,
    r#"image: |1
      .-~~~~-. |\\_
   @_/        /  oo\_
     |    \   \   _(")
      \   /-| ||'--'
 jgs   \_\  \_\\
"#,
    r#"image: |1
       _//|.-~~~~-,
     _/66  \       \_@
    (")_   /   /   |
      '--'|| |-\  /
 jgs      //_/ /_/
"#,
    r#"image: |1
         _   ,_,   _
        / `'=) (='` \
       /.-.-.\ /.-.-.\
 jgs   `      "      `
"#,
    r#"image: |1
          ,_,
          )v(
          \_/
 jgs    ==="===
"#,
    r#"image: |1
                 ;'-.
     `;-._        )  '---.._
       >  `-.__.-'          `'.__
      /_.-'-._         _,   ^ ---)
 jgs  `       `'------/_.'----```
"#,
    r#"image: |1
               _
          .-.-.=\-.
 jgs      (_)=='(_)
"#,
    r#"image: |1
  ___               ___ ___  ___ ___  ___ ___
 |o o|             |ooo|ooo||ooo|o o||o o|o o|
 |o_o| ___ ___  ___|ooo|ooo||ooo|o_o||o_o|_o_|___
 |o  ||o  |o  ||o  |ooo|                 |o o|o  |
 |__o||__o|__o||__o|ooo| jgs             |_o_|__o|
"#,
    r#"image: |1
         _   ,_,   _
        / `'=) (='` \
       /.-.-.\ /.-.-.\
 jgs   `      "      `
"#,
    r#"image: |1
        (_    ,_,    _)
        / `'--) (--'` \
       /  _,-'\_/'-,_  \
 jgs  /.-'     "     '-.\
"#,
    r#"image: |1
                       __
     (\   .-.   .-.   /_")
      \\_//^\\_//^\\_//
 jgs   `"`   `"`   `"`
"#,
    r#"image: |1
             __
         _ ."--". _
        (_:/ oo \:_)
    /\,   _(`()`)_   ,/\
    \ `~~~,(`""`),~~~` /
 jgs `'---|/`""`\|---'`
"#,
    r#"image: |1
      ._,_,
    ,/'`'=.    ().-=-.()
    c _','|     |=. .=|
 jgs \\_//     (  _0_  )
        `"`       `"""""`
"#,
    r#"image: |1
              ,
            __)\_
      (\_.-'    a`-.
 jgs  (/~~````(/~^^`
"#,
    r#"image: |1
              ,
            __)\___
        _.-'      .`-.
  jgs .'/~~```"~z/~'"`
      ^^
"#,
    r#"image: |1
       ,       -,
       )\______) \___
 jgs  /.-.,_    ))  a`.
      `     "'/ /----""`
              "`
"#,
    r#"image: |1
           \   '
           /\ o
         >=)'>
           \/
 jgs       /
"#,
    r#"image: |1
         ,_
         /.\
        {>) `
 jgs    `((_,
          `"`
"#,
    r#"image: |1
          _         _
     \. _(9>       <6)_ ,/
 jgs  \==_)         (_==/  jgs
       -'=           ='-
"#,
    r#"image: |1
             _      _
            <')_,/ <') ,/
            (_==/  (_==/
      jgs    ='-    ='-
"#,
    r#"image: |1
          .-.
         ( (9>
         / )\
       ,/_/_/
 jgs     -"=
"#,
    r#"image: |1
    (\  }\   (\  }\   (\  }\
   (  \_('> (  \_('> (  \_('>
   (__(=_)  (__(=_)  (__(=_)
 jgs  -"=      -"=      -"=
"#,
    r#"image: |1
       _          _          _          _          _
     >(')____,  >(')____,  >(')____,  >(')____,  >(') ___,
       (` =~~/    (` =~~/    (` =~~/    (` =~~/    (` =~~/
 jgs~^~^`---'~^~^~^`---'~^~^~^`---'~^~^~^`---'~^~^~^`---'~^~^~
"#,
    r#"image: |1
                  ,-.
          ,      ( {o\
          {`"=,___) (`~
           \  ,_.-   )
 jgs  ~^~^~^`- ~^ ~^ '~^~^~^~
"#,
    r#"image: |1
      ,___,
      (9v9)
      (_^((\
 jgs^^^"^" \\^^^^
    ^^^^^^^^^^^^^
"#,
    r#"image: |1
      ,___,
      (6v6)
      (_^(_\
 jgs^^^"^" \\^^^^
    ^^^^^^^^^^^^^
"#,
    r#"image: |1
         (\___/)
         (o\ /o)
        /|:.V.:|\
 jgs    \\::::://
    -----`"" ""`-----
"#,
    r#"image: |1
  __,___@
 [_'^   )
   `//-\\
   ^^  ^^
"#,
    r#"image: |1
       @___,__
 jgs   (   ^'_]
       //-\\'
       ^^  ^^
"#,
    r#"image: |1
         _       _       _       _       _       _       _       _
      _-(_)-  _-(_)-  _-(_)-  _-(")-  _-(_)-  _-(_)-  _-(_)-  _-(_)-
    `(___)  `(___)  `(___)  `%%%%%  `(___)  `(___)  `(___)  `(___)
 jgs // \\   // \\   // \\   // \\   // \\   // \\   // \\   // \\
"#,
    r#"image: |1
  \_/
 '-0-'
 --0--
 .-0-.
"#,
    r#"image: |1
  \O/
 '-O-'
  /o\
   ^
"#,
    r#"image: |1
         _
        /_/_      .'''.
     =O(_)))) ...'     `.
 jgs    \_\              `.    .'''
                           `..'
"#,
    r#"image: |1
         ,   ,
        { \w/ }
         `>!<`
 jgs     (/^\)
         '   '
"#,
    r#"image: |1
         \_/-.--.--.--.--.--.
         (")__)__)__)__)__)__)
     jgs  ^ "" "" "" "" "" ""
"#,
    r#"image: |1
                            .    .
                             )  (
       _ _ _ _ _ _ _ _ _ _ _(.--.)
     {{ { { { { { { { { { { ( '_')
 jgs  >>>>>>>>>>>>>>>>>>>>>>>`--'>
"#,
    r#"image: |1
                       __
     (\   .-.   .-.   /_")
      \\_//^\\_//^\\_//
 jgs   `"`   `"`   `"`
"#,
    r#"image: |1
     ._q0p_.
     '=(_)='
      / V \
 jgs (_/^\_)
"#,
    r#"image: |1
      .W.
     (o|o)
  jgs `'`
"#,
    r#"image: |1
            (
             )
           _/
        _({_})_
  jgs    /(o)\
"#,
    r#"image: |1
         ,_,___,    ,
       _0/\|\_/ `--'
 jgs  .-'  ` `-.___,
"#,
    r#"image: |1
        |\=/|.-"""-.
        /6 6\       \
       =\_Y_/=  (_  ;\
  jgs    _U//_/-/__///
        /kit\      ((
"#,
    r#"image: |1
      \    /\
       )  ( ')
      (  /  )
 jgs   \(__)|
"#,
    r#"image: |1
       |\_/|
       |q p|   /}
       ( 0 )"""\
       |"^"`    |
 jgs   ||_/=\\__|
"#,
    r#"image: |1
       |\_/|
       |d b|    /}
       ( 0 )"""\'
       8===8    |
 jgs   ||_/=\\__|
"#,
    r#"image: |1
       .-"-.
      /|6 6|\
     {/(_0_)\}
      _/ ^ \_
 jgs (/_/^\_\)-'
"#,
    r#"image: |1
       .-"-.
      /|6 6|\
     {/(_0_)\}
      _/=o=\_
 jgs (/_/^\_\)-'
"#,
    r#"image: |1
           __
      (___()'`;
      /,    /`
 jgs  \\"--\\
"#,
    r#"image: |1
         __
        ()'`;
        /\|`
       /  |
 jgs (/_)_|_
"#,
    r#"image: |1
                                   .-.
      (___________________________()6 `-,
      (   ______________________   /''"`
 jgs  //\\                      //\\
      "" ""                     "" ""
"#,
    r#"image: |1
   _.-.
 '( ^{_}    (
   `~\`-----'\
      )_)---)_)jgs
"#,
    r#"image: |1
                  .-._
       )         {_}^ )'
      /`----------`/~`
 jgs (_(--------(_(
"#,
    r#"image: |1
     ,    /-.
    ((___/ __>
    /      }
    \ .--.(    ___
 jgs \\   \\  /___\
"#,
    r#"image: |1
        ."-.
       /X  | _o.----.    _
      /\_  \/ /  __  \_// )
 jgs  \__)-/_/\_____)____/
"#,
    r#"image: |1
       \\
        \\_
         (_)
        / )
 jgs  o( )_\_
"#,
    r#"image: |1
       \\
        \\_
         (')
 jgs    / )=
      o( )_
"#,
    r#"image: |1
          \\
           \\_
        .---(')
 jgs  o( )_-\_
"#,
    r#"image: |1
       \\
        \\_   \\
         (')   \\_
 jgs    / )=.---(')
      o( )o( )_-\_
"#,
    r#"image: |1
         \\      \\      \\      \\      \\      \\
        __()    __()    __()    __()    __()    __()
 jgs  o(_-\_  o(_-\_  o(_-\_  o(_-\_  o(_-\_  o(_-\_
"#,
    r#"image: |1
 ,____          (\=-,
 \ "=.`'-.______/ /^
  `-._.-"(=====' /
          \<'--\(
   jgs     ^^   ^^
"#,
    r#"image: |1
        (`-()_.-=-.
        /66  ,  ,  \
      =(o_/=//_(   /======`
 jgs      ~"` ~"~~`
"#,
    r#"image: |1
                    _ _
             .-"-._( ) )
            /  ,  ,  66\
     `======\   )_\\=\_o)=
 jgs         `~~"~ `"
"#,
    r#"image: |1
             _
            (c).-.
 jgs     .-" , _( )____)
"#,
    r#"image: |1
                 _
             .-.(c)
 jgs  (_____( )  , "-.
               `~  ~""`
"#,
    r#"image: |1
         _    __
        (,).-"  ".
 jgs   /',  _ (   )________,
       `^'"` """"'`
"#,
    r#"image: |1
   <'`,,-,,)-----
"#,
    r#"image: |1
     ---(___C'>
"#,
    r#"image: |1
  _____(,__,c'>
"#,
    r#"image: |1
   ___(m-mC'>
"#,
    r#"image: |1
   _()______
 /_'_/   /  `\            ,
    /'---\___/~~~~~~~~~~~~   jgs
   ~     ~~
"#,
    r#"image: |1
 ()-()
  \"/  jgs
   `
"#,
    r#"image: |1
 ()-().----.          .
  \"/` ___  ;________.'  jgs
   ` ^^   ^^
"#,
    r#"image: |1
   _  __
  (_)/   \
 <'_, ____)~~~~~~~     jgs
   ^^   ^^
"#,
    r#"image: |1
        ____()()
       /      @@
 `~~~~~\_;m__m._>o    jgs
"#,
    r#"image: |1
           ___
  _  _  .-'   '-.
 (.)(.)/         \   jgs
  /@@             ;
 o_\\-mm-......-mm`~~~~~~~~~~~~~~~~`
"#,
    r#"image: |1
         _
        : `            _..-=-=-=-.._.--.
         `-._ ___,..-'" -~~`         __')
 jgs         `'"---'"`>>"'~~"~"~~>>'`
 =====================```========```========
"#,
    r#"image: |1
       _  .----.
      (_\/      \_,
 jgs    'uu----uu~'
"#,
    r#"image: |1
          .==.
       __/-^-^\
      (' )^-^-^\)
 jgs   `^UU^^UU^
"#,
    r#"image: |1
           ,-"""-.
      66._/ \___/ \
     (____)_/___\__\_)
  jgs    /_//   \\_\
"#,
    r#"image: |1
          .-""""-,
         / \____/ \_.99
      (_/__/____\_(____)
  jgs   //_//    \\_\
"#,
    r#"image: |1
         ()-()
       .-(___)-.
        _<   >_
 jgs    \/   \/
"#,
    r#"image: |1
     =,    (\_/)    ,=
      /`-'--(")--'-'\
 jgs /     (___)     \
    /.-.-./ " " \.-.-.\
"#,
    r#"image: |1
      ()=()   ()-()   ()=()   ()-()
      ('Y')   (':')   (^;^)   ('&')
      q . p   d . b   C   C   c . c
 jgs  ()_()   ()_()   ()_()   ()=()
"#,
    r#"image: |1
          _,____ c--.
        /`  \   ` _^_\
 jgs`~~~\  _/---'\\  ^
         `~~~     ~~
"#,
    r#"image: |1
      .--p_____,_
     /_^_ `   /  `\
 jgs ^  //'---\_  /~~~
       ~~     ~~~`
"#,
    r#"image: |1
    oo  .--.  oo  .--.  oo  .--.
 jgs \\(____)_ \\(____)_ \\(____)_
      `~~~~~~~` `~~~~~~~` `~~~~~~~`
"#,
    r#"image: |1
    __  (\_
   (_ \ ( '>
     ) \/_)=
 jgs (_(_ )_
"#,
    r#"image: |1
                                  /'-\
                       .-=-.     /  " \
         _   .-'-.   .'  _  '.  |  .-\oo)
        ( \ / .-. \ /  .' '.  \ /  |
 ~jgs^~`~^~`~^~`~^~`~^~^~`^~^~`^~^~^~^~^~`
"#,
    r#"image: |1
                           _   _       _a_a
               _   _     _{.`=`.}_    {/ ''\_
         _    {.`'`.}   {.'  _  '.}  {|  ._oo)
        { \  {/ .-. \} {/  .' '.  \} {/  |
 ~jgs^~`~^~`~^~`~^~`~^~^~`^~^~`^~^~^~^~^~^~`^~~`
"#,
    r#"image: |1
    _\/_                 |                _\/_
    /o\\             \       /            //o\
     |                 .-'-.                |
    _|_______     --  /     \  --     ______|__
 jgs         `~^~^~^~^~^~^~^~^~^~^~^~`
"#,
    r#"image: |1
   ,\//,.\//\/.         ,\/,   ,\/.//,          ,~
   //o\\/o//o\\ ,.,.,   //o\   /o\\o\\          |\
     |   |  |  /###/#\    |     |  |           /| \
     |   |  |  |' '|:|    |`=.='|  |          /_|__\
 jgs^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"""~~~~~~~~~~~~~~
"#,
    r#"image: |1
      _        _
    (\o/)    {\o/}
 jgs /_\      /_\
"#,
    r#"image: |1
               (_)L|J
        )      (") |     (
        ,(. A `/ \-|   (,`)
       )' (' \/\ / |  ) (.
  jgs (' ),).  _W_ | (,)' )
     ^^^^^^^^^^^^^^^^^^^^^^^
"#,
    r#"image: |1
                L|J(_)
       )    | (")      (
       ,(.  |`/ \- y  (,`)
      )' (' | \ /\/  ) (.
 jgs (' ),) | _W_   (,)' ).
"#,
    r#"image: |1
    ~~~;       ;~~~
  _/@@ '       ' @@\_
 (_   .C       C    _)
   ""::'        \<>/   jgs
    ''           `'
"#,
    r#"image: |1
      _//////
     // o o \
     (   7   )
 jgs  \ '=' /
       '---'
"#,
    r#"image: |1
   ,@@@@@@,
 ,@@@@@""@@,
 @@@@@ 6.6\@
 @@@C  _-_)@
 '@@@) (@@'
"#,
    r#"image: |1
        _....,_         _,...._
    _.-` _,..,_'.     .'_,..,_ `-._
     _,-`/ o \ '.     .' / o \`-,_
 jgs  '-.\___/.-`     `-.\___/.-'
"#,
    r#"image: |1
      _____________
     (_________ _.'``''-....
         (___.-' _,
          (_(_.-'  `
 jgs       (__)__,-"``'-----
"#,
    r#"image: |1
     ....-''``'._ _________)
             ,_  '-.___)
               `'-._)_)
 jgs -----'``"-,__(__)
"#,
    r#"image: |1
     oOOO() ()OOOo
     /  _)   (_  \
     |  (     )  |
 jgs \__)     (__/
"#,
    r#"image: |1
        .. ..
      .'  `  `.
    .'_.-...-._`.
     `.       .'
 jgs   `-...-'
"#,
    r#"image: |1
         .-.
        (0.0)
      '=.|m|.='
 jgs  .='`"``=.
"#,
    r#"image: |1
           _           _
          (_'---------'_)
   jgs    (_.=========._)
"#,
    r#"image: |1
        .-.-.
       (_\|/_)
       ( /|\ )       __
 jgs    '-'-'`-.__.-'  `-
"#,
    r#"image: |1
          _
        _ \'-_,#
       _\'--','`|
       \`---`  /
 jgs    `----'`
"#,
    r#"image: |1
    _____________
   |\ , , , , , /|
    \\ ` ' ` ' //
     \'._____.'/
 jgs  `'-----'`
"#,
    r#"image: |1
                x
     .-. _______|
     |=|/     /  \
     | |_____|_""_|
 jgs |_|_[X]_|____|
"#,
    r#"image: |1
              .----------------.
              |_I_I_I_I_I_I_I_I]___
      .::.    |  _          : ; _  )
 jgs  ':::'' ='-(_)----------=-(_)-'
"#,
    r#"image: |1
              .----------------.
              |_I_I_I_I_I_I_I_I]___
      .::.    |  _  SCHOOL  : ; _  )
 jgs  ':::'' ='-(_)----------=-(_)-'
"#,
    r#"image: |1
      _____________________________________
     |""|""|""|""|""|""|""|""|""|""|""|""|"|
     |  1  2  3  4  5  6  7  8  9 10 11 12 |
 jgs '-------------------------------------'
"#,
    r#"image: |1
       ,
      /(  ___________
     |  >:===========`
      )(
 jgs  ""
"#,
    r#"image: |1
                        (
       __________       )\
      /         /\______{,}
 jgs  \_________\/
"#,
    r#"image: |1
                         _    ,
  __   __   __   --  -,_/\\_~0_\ ___    __   __   __
               --    /  ___ \-  `___`"-,
             ---    `"-( @ )----( @ )---`
 jgs                    '-'      '-'
"#,
    r#"image: |1
        .--.
     .-'    `--.
 jgs '-()---()--'
"#,
    r#"image: |1
             _____
       _____|LI|_\\__
      [    _  [^   _ `)
 jgs  `"""(_)"""""(_)~
"#,
    r#"image: |1
                        __,
              __.-"-.__//
        _.-'~`         /
 jgs   '---(_)----(_)-'
"#,
    r#"image: |1
     .--------.__
     |::::::::|[_I___,
     |_.-.____I__.-~;|
 jgs  `(_)--------(_)"
"#,
    r#"image: |1
      .-------.___
      | ||||| |[_o\_
      | ^^^^^ |- `  )
 jgs  '-()------()-'
"#,
    r#"image: |1
        ___
       /___\
      ." | ".
      (o_|_o)
 jgs   u   u
"#,
    r#"image: |1
           ,~
           |\
          /| \
  ~^~ ^~ /_|__\~^~ ~^~
 ~^~^ ~ '======' ~^ ~^~
"#,
    r#"image: |1
             O__,     O__,
         /'._|\/______|\_/.'\
         \    /             /
 jgs~^~^~^~^^`~^~^~^~^~~^~^~^~^~^~^
"#,
    r#"image: |1
         _f_,_
 jgs    (_)`(_)
"#,
    r#"image: |1
       f_,
 jgs  ()\()
"#,
    r#"image: |1
           == __\
       __.-"\---|__
      /  \\_@\-'/  \
 jgs  \__/      \__/
"#,
    r#"image: |1
        )
       (_)
       |`|
       | |  _()
 jgs \_|_|_/`
"#,
    r#"image: |1
        .-------------------------------.
       /(_____,_________________________)\
      |      / . .__||] . . . . .         |
 jgs   \_____\______||]__________________/
"#,
    r#"image: |1
        ____ ___
        )  =\  =\
       /    =\  =\
       \      `-._`-._
  jgs   )__(`\____)___)
"#,
    r#"image: |1
    .--------------.
     \-.        .-/
      \ \      / /
  jgs  \ \    / /
        `-'--'-`
"#,
    r#"image: |1
           )\_ _/(
 jgs   --=(__/^\__)==-
"#,
    r#"image: |1
     ,___ ,__
      )  `\  `\
     (   _ '-._'-._
 jgs  )_( \____)___)
"#,
    r#"image: |1
      _,
   .-'_|      ,
  _| (_|     _|\
 (_|        (_|
"#,
    r#"image: |1
        _.+._
      (^\/^\/^)
       \@*@*@/
 jgs   {_____}
"#,
    r#"image: |1
                        .--.
        _              /____\
     ,_(')<     [B]    \~~~~/
 jgs \___)     [A][C]   '--'
"#,
    r#"image: |1
  O./
  O'\   jgs
"#,
    r#"image: |1
       __
      (__)   _,.-~>
       __`~~>_.-~`
 jgs  (__)~`  `~-.>
"#,
    r#"image: |1
     .-==============-.  .-==============-.
     |                |  |                |
    (|+              -| (|+              -|
     |                |  |                |
 jgs '-==============='  '-==============-'
"#,
    r#"image: |1
     .( * .
  .*  .  ) .
 . . POOF .* .
  '* . (  .) '
   ` ( . *
"#,
    r#"image: |1
           66666
         __|||||__   H A P P Y
        {._._._._.}     B I R T H D A Y  !
 jgs  __{._._._._.}__
     `~~~~~~~~~~~~~~~`
"#,
    r#"image: |1
          ,,,,,
         _|||||_
        {~*~*~*~}
      __{*~*~*~*}__
 jgs `-------------`
"#,
    r#"image: |1
        .:.      .:.         .:.
      _oOoOo   _oOoOo       oOoOo_
     [_|||||  [_|||||       |||||_]
       |||||    |||||       |||||
 jgs   ~~~~~    ~~~~~       ~~~~~
"#,
    r#"image: |1
            ___________
        _.'`.---------.`'-._
      `'-. : (")(")(") : _.'~`
    jgs   '-'---------'-'
"#,
    r#"image: |1
       _
      |-|  __
 jgs  |=| [Ll]
      "^" ====`o
"#,
    r#"image: |1
                _
           ~0  (_|
          |(_~|^~~|
          TT/_ T"T
 jgs^^^^^^^^^^^^^^^^^^^
"#,
    r#"image: |1
             _                          _
        ~0  (_|  . - ' - . _ . - ' - . |_)  O
       |(_~|^~~|                      |~~^|~_)|
       TT/_ T"T                        T"T _\HH
 jgs^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
"#,
    r#"image: |1
  .        }   ~ .__,~O     ` ~ _   ~  ^  ~  -
         `}` - =    /#/`-'     -   ~   =   ~  _ ~
    ~ .   }   ~ -   |^\   _ ~ _  - ~ -_  =  _
         }`  _____ /_  /____ - ~ _   ~ _
 jgs   }`   `~~~~~~~~~~~~~~~`_ = _ ~ -
"#,
    r#"image: |1
     -   \O                   ,  .-.___
   -     /\                 O/  /xx\XXX\
  -   __/\ `                /\  |xx|XXX|
     `    \, ()            ` << |xx|XXX|
 jgs^^^^^^^^`^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
"#,
    r#"image: |1
    O
   /\\>
 _/ < \
 =  '  `
"#,
    r#"image: |1
      ____
      \___\_.:::::::.___
 jgs  /___/ ':::::::'
"#,
    r#"image: |1
       \~~~/  ' .
        \_/  \~~~/
         |    \_/
       __|__   |
     jgs     __|__
"#,
    r#"image: |1
         \_|  __
           \_/__\            .--=='/~\
    ____,__/__,_____,______)/    /{~}}}
    -,------,----,-----,---,\'--' {{~}}
 jgs                         '--==.\}/
"#,
    r#"image: |1
                 ';.
       .---.,       \
      {}-.__,>=======;==================
       `----'      ,/
 jgs             .;'
"#,
    r#"image: |1
           _
          (_)
         (_)_)
 jgs       T
"#,
    r#"image: |1
   _____//  \\_____
 " ----( `\/` )----"
 jgs    `~``~`
"#,
    r#"image: |1
         \\\
  .---.  ///
 (:::::)(_)():
  `---'  \\\
  jgs    ///
"#,
    r#"image: |1
            (
            ___
         .-'_ =\
 jgs   c=<___\-_)
      ~~~~~~~~~~~~
"#,
    r#"image: |1
         _
        ( )   _
       (_` )_('>
       (__,~_)8
 jgs      _YY_
"#,
    r#"image: |1
        _[_]_
         (")
     `--( : )--'
       (  :  )
 jgs ""`-...-'""
"#,
    r#"image: |1
           ___       ___       ___       ___
          ('v')     ('v')     ('v')     ('v')
         ((   ))   ((   ))   ((   ))   ((   ))
 jgs   -/-"---"---/-"---"---/-"---"---/-"---"--
"#,
    r#"image: |1
          .-.   .-.   .-.   .-.   .-.
         ((_)) ((_)) ((_)) ((_)) ((_))
 jgs      '-'   '-'   '-'   '-'   '-'
"#,
    r#"image: |1
      _
     [_]|
     | ||.==.
     |_ ``""`)
 jgs  _)    (_
"#,
    r#"image: |1
        O
    |  /|
    |_(__\
     \  )\
 jgs  )( /_
"#,
    r#"image: |1
               )
              (
  _ ___________ )
 [_[___________#
"#,
    r#"image: |1
       ____
   __ /\../\ __
  (__|>:  :<|__)
 jgs  \/''\/
       ^^^^
"#,
    r#"image: |1
          ==
       <^\()/^>
        \/  \/
 jgs     /  \
         `''`
"#,
    r#"image: |1
        ==  ==      "we are each of us angels
     <^\()/\()/^>       with but one wing,
      \/  \/  \/       and can only fly by
       /  \/  \        embracing each other"
 jgs   `""``""`
"#,
    r#"image: |1
     (       ..:::[=--.  /o\             _
       )   .:::''      \ (")\           /_\
      (,`):::,(.        `/:\            I I
      ) (. )' ('         |:|`\       ,={_O_}
 jgs (,)' ). (' ),)     _/^|_  -.__.'   | |
"#,
    r#"image: |1
        .=.
       //"\\
      (/6 6\)
      )\ = /(
 jgs (_ ) ( _)
"#,
    r#"image: |1
            {}   _,
        ___/__\_//
       (_\_    _/
        -' `)(`
 jgs       ~""~
"#,
    r#"image: |1
                      \  '  /
         ~,             .-.          ^^
         /|        -=  (   )  =-       ^^
    ~^~ /_|\ ^~~-~^~^~-=~=~=-~^~^~^-~^~^~^~
 jgs~^~ ~^~^ ~-~^~~-~^~^~-=^~~^-~^~^~^-~^~^~^~
"#,
    r#"image: |1
        ~,  ^^             |          "The sun setting
        /|    ^^         \ _ /           is no less
       / |\           -=  ( )  =-      beautiful than
  ~^~ ~=====^~^~-~^~~^~^-=~=~=-~^~^~^~ the sun rising."
"#,
];

/// A game mode defining how the ASCII-art image will be disclosed progressively.
#[derive(Clone, Debug, PartialEq)]
pub enum RewardingScheme {
    /// Game mode that is used together with the traditional gallows image (the gallows image
    /// is not build in, but can be added in the configuration file. The image is disclosed
    /// piecemeal after each wrong guess.
    UnhideWhenLostLife,
    /// Default game mode. The image is disclosed piecemeal after each right guess.
    UnhideWhenGuessedChar,
}
/// One character of the ASCII art image.
#[derive(PartialOrd, Eq, PartialEq, Debug, Copy, Clone)] //omitting Ord
pub struct ImChar {
    pub point: (u8, u8),
    pub code: char,
}

/// Format an image character.
impl fmt::Display for ImChar {
    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
        write!(f, "{}", self.code)
    }
}

/// Ord enables us to v.sort() the image characters.
impl Ord for ImChar {
    /// Compares to ImChar.
    /// Points near the left lower corner are small.
    fn cmp(&self, other: &Self) -> Ordering {
        fn weight(ic: &ImChar) -> isize {
            let &ImChar { point: (x, y), .. } = ic;
            // points near the lower left corner are light
            x as isize - y as isize
        }
        weight(&self).cmp(&weight(&other))
    }
}

#[derive(Clone, Debug, PartialEq)]
/// An ASCII-art image.
pub struct Image {
    pub ichars: Vec<ImChar>,
    pub dimension: (u8, u8),
    pub visible_points: usize,
    pub rewarding_scheme: RewardingScheme,
}

/// Format an image.
impl fmt::Display for Image {
    fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
        let x_max = self.dimension.0 as usize;
        let y_max = self.dimension.1 as usize;

        let mut i = vec![' '; ((x_max + 1) * y_max) as usize];
        for y in 0..y_max {
            i[((x_max + 1) * y + x_max) as usize] = '\n';
        }

        for ic in self.ichars.iter().take(self.visible_points) {
            let &ImChar {
                point: (x, y),
                code,
            } = ic;
            i[(x as usize + y as usize * (x_max + 1))] = code;
        }

        write!(f, "{}", i.into_iter().collect::<String>())
    }
}

impl Image {
    /// Returns a random built-in image.
    pub fn new() -> Result<Self, ConfigParseError> {
        let mut rng = thread_rng();
        Self::from_yaml((&DEFAULT_IMAGES).choose(&mut rng).unwrap())
    }

    /// First try ot parse YAML, if it fails try the depreciated proprietary format and
    /// read the image data.
    pub fn from_formatted(input: &str) -> Result<Self, ConfigParseError> {
        // If both return an error, return the first one here.
        Self::from_yaml(&input).or_else(|e| Self::from_proprietary(&input).or(Err(e)))
    }

    /// Constructor reading image data from YAML configuration files.
    pub fn from_yaml(input: &str) -> Result<Self, ConfigParseError> {
        #[derive(Debug, PartialEq, Deserialize)]
        pub struct RawImage {
            image: Option<String>,
            traditional: Option<bool>,
        }

        let input = input.trim_start_matches('\u{feff}');

        let raw: RawImage = serde_yaml::from_str(&input)?;

        let (image, rewarding_scheme) = match raw {
            RawImage { image: None, .. } => return Err(ConfigParseError::NoImageData),
            RawImage {
                image: Some(i),
                traditional: None,
            } => (i, RewardingScheme::UnhideWhenGuessedChar),
            RawImage {
                image: Some(i),
                traditional: Some(r),
            } => (
                i,
                if r {
                    RewardingScheme::UnhideWhenLostLife
                } else {
                    RewardingScheme::UnhideWhenGuessedChar
                },
            ),
        };

        Self::from(&image, rewarding_scheme)
    }

    /// Constructor reading image data from proprietary configuration files.
    pub fn from_proprietary(string: &str) -> Result<Self, ConfigParseError> {
        let mut v: Vec<ImChar> = Vec::new();
        let mut rewarding_scheme = DEFAULT_REWARDING_SCHEME;
        let mut file_syntax_test1: Result<(), ConfigParseError> = Ok(());

        for (y, line) in string
            // split in lines
            .lines()
            .enumerate()
            .filter(|&(n, l)| {
                if l.starts_with(CONF_LINE_IDENTIFIER__CONTROL) {
                    if l[1..].trim() == UNHIDE_WHEN_LOST_LIVE_IDENTIFIER {
                        rewarding_scheme = RewardingScheme::UnhideWhenLostLife;
                        false
                    } else if l[1..].trim() == UNHIDE_WHEN_GUESSED_CHAR_IDENTIFIER {
                        rewarding_scheme = RewardingScheme::UnhideWhenGuessedChar;
                        false
                    } else {
                        // we only save the first error
                        if file_syntax_test1.is_ok() {
                            file_syntax_test1 = Err(ConfigParseError::GameModifier {
                                line_number: n + 1,
                                line: l.to_string(),
                            });
                        };
                        false
                    }
                } else {
                    true
                }
            })
            .map(|(_, l)| l)
            // consider only lines starting with '|'
            .filter(|&l| l.starts_with(CONF_LINE_IDENTIFIER__IMAGE))
            .enumerate()
        //.inspect(|&(n,l)| println!("line {:?}: {:?} ", n,l))
        {
            let mut ii: Vec<_> = line
                .char_indices()
                // skip first char '|'
                .skip(1)
                // consider only chars != ' '
                .filter(|&(_, c)| c != ' ')
                // save in ImChar object
                .map(|(x, c)| ImChar {
                    // subtract the char we have skipped before
                    point: ((x - 1) as u8, y as u8),
                    code: c,
                })
                .collect();
            v.append(&mut ii);
        }

        file_syntax_test1?;

        // find dimensions
        let dimension = if !v.is_empty() {
            let mut x_max = 0;
            let mut y_max = 0;

            for i in &v {
                let &ImChar { point: (x, y), .. } = i;
                if x > x_max {
                    x_max = x
                };
                if y > y_max {
                    y_max = y
                };
            }
            // we know there is at least one char
            (x_max + 1, y_max + 1)
        } else {
            (0, 0)
        };

        // order points
        let v_len = v.len();
        if v_len <= BIG_IMAGE {
            v.sort(); // Sort algorithm, see "impl Ord for ImageChar"
        } else {
            let mut rng = thread_rng();
            (&mut v).shuffle(&mut rng); // points appear randomly.
        }

        if v.is_empty() {
            Err(ConfigParseError::NoImageData)
        } else {
            Ok(Self {
                ichars: v,
                dimension,
                visible_points: v_len,
                rewarding_scheme,
            })
        }
    }

    #[inline]
    /// This constructor takes a pure ASCII, non-escaped, multiline image string.
    pub fn from(image: &str, rewarding_scheme: RewardingScheme) -> Result<Self, ConfigParseError> {
        let mut ascii: Vec<ImChar> = Vec::new();
        // TODO
        let mut _signature: Vec<ImChar> = Vec::new();

        // Create a string of `' '` with length of longest `IMAGE_KNOWN_SIGNATURES`.
        let mut spaces = String::new();
        let longest = IMAGE_KNOWN_SIGNATURES
            .iter()
            .map(|s| s.len())
            .max()
            .unwrap();
        for _ in 0..longest {
            spaces.push(' ');
        }

        for (y, line) in image.lines().enumerate() {
            let mut ascii_line = line.to_owned();
            // TODO
            let _signature_line = String::new();
            for sig in IMAGE_KNOWN_SIGNATURES {
                // `spaces` has the same length than `sig`.
                let short_spaces = &spaces[..sig.len()];
                debug_assert_eq!(sig.len(), short_spaces.len());
                ascii_line = ascii_line.replace(sig, short_spaces);
            }

            let mut ii: Vec<_> = ascii_line
                .char_indices()
                // consider only chars != ' '
                .filter(|&(_, c)| c != ' ')
                // save in ImChar object
                .map(|(x, c)| ImChar {
                    point: ((x) as u8, y as u8),
                    code: c,
                })
                .collect();
            ascii.append(&mut ii);
        }

        // find dimensions
        let dimension = if !ascii.is_empty() {
            let mut x_max = 0;
            let mut y_max = 0;

            for i in &ascii {
                let &ImChar { point: (x, y), .. } = i;
                if x > x_max {
                    x_max = x
                };
                if y > y_max {
                    y_max = y
                };
            }
            // we know there is at least one char
            (x_max + 1, y_max + 1)
        } else {
            (0, 0)
        };

        // order points
        let v_len = ascii.len();
        if v_len <= BIG_IMAGE {
            ascii.sort(); // Sort algorithm, see "impl Ord for ImageChar"
        } else {
            let mut rng = thread_rng();
            (&mut ascii).shuffle(&mut rng); // points appear randomly.
        }

        if ascii.is_empty() {
            Err(ConfigParseError::NoImageData)
        } else {
            Ok(Self {
                ichars: ascii,
                dimension,
                visible_points: v_len,
                rewarding_scheme,
            })
        }
    }

    /// Discloses parts of the image according to the course of the play.
    pub fn update(&mut self, game: &Game) {
        match self.rewarding_scheme {
            RewardingScheme::UnhideWhenGuessedChar => {
                if game.lifes != 0 {
                    self.hide((game.secret.hidden_chars(), game.secret.chars_to_guess()));
                }
            }
            RewardingScheme::UnhideWhenLostLife => {
                self.hide((game.lifes as usize, LIVES as usize));
            }
        };
    }

    /// Sets how much of the image will be disclosed next time the image is rendered.
    fn hide(&mut self, fraction: (usize, usize)) {
        let l = self.ichars.len();

        let as_points = |(n, d)| (5 * l * (d - n) as usize / d as usize + l) / 6;

        // silently ignore division by zero
        if fraction.1 > 0 {
            self.visible_points = as_points(fraction);
        };
    }
}

// *******************************

#[cfg(test)]
mod tests {
    use super::DEFAULT_REWARDING_SCHEME;
    use super::{ImChar, Image, DEFAULT_IMAGES, IMAGE_KNOWN_SIGNATURES};
    use crate::dictionary::ConfigParseError;

    /// Test image parsing of configuration file data
    #[test]
    fn test_image_parser_syntax() {
        let config: &str = r#"
|ab
|cd"#;
        let image = Image::from_proprietary(&config);
        //println!("{:?}",image);
        let expected = Ok(Image {
            ichars: [
                ImChar {
                    point: (0, 0),
                    code: 'a',
                },
                ImChar {
                    point: (0, 1),
                    code: 'c',
                },
                ImChar {
                    point: (1, 0),
                    code: 'b',
                },
                ImChar {
                    point: (1, 1),
                    code: 'd',
                },
            ]
            .to_vec(),
            dimension: (2, 2),
            visible_points: 4,
            rewarding_scheme: DEFAULT_REWARDING_SCHEME,
        });

        assert!(image == expected);
    }

    /// Is non image data ignored?
    #[test]
    fn test_image_parser_syntax_ignore() {
        let config: &str = r#"
|/\
\/"#;
        let image = Image::from_proprietary(&config).unwrap();
        //println!("{:?}",image);
        let expected = Image {
            ichars: [
                ImChar {
                    point: (0, 0),
                    code: '/',
                },
                ImChar {
                    point: (1, 0),
                    code: '\\',
                },
            ]
            .to_vec(),
            dimension: (2, 1),
            visible_points: 2,
            rewarding_scheme: DEFAULT_REWARDING_SCHEME,
        };

        assert_eq!(image, expected);
    }

    #[test]
    fn test_image_renderer() {
        let config: &str = r#"
|>o)
|(_>   <o)
|      (_>
"#;
        let expected: &str = ">o)      \n(_>   <o)\n      (_>\n";
        let image = Image::from_proprietary(&config).unwrap();

        assert!(image.visible_points > 0);
        assert_eq!(format!("{}", image), expected);
    }

    #[test]
    fn test_image_renderer_yaml() {
        let config: &str = r#"image: |1
 >o)
 (_>   <o)
       (_>
"#;
        let expected: &str = ">o)      \n(_>   <o)\n      (_>\n";
        let image = Image::from_yaml(&config).unwrap();

        assert!(image.visible_points > 0);
        assert_eq!(format!("{}", image), expected);
    }

    #[test]
    fn test_image_parser_built_in_image() {
        let config: &str = "this is no image";
        let image = Image::from_yaml(&config).unwrap_err();
        //println!("{:?}",image);

        assert!(matches!(image, ConfigParseError::NotInYamlFormat(_)));
    }

    /// disclose image progressively
    #[test]
    fn test_proprietery_image_parser_disclose() {
        let config: &str = "|abcde\n|f";
        let mut image = Image::from_proprietary(&config).unwrap();
        //println!("{:?}",image);
        let expected = Image {
            ichars: [
                ImChar {
                    point: (0, 0),
                    code: 'a',
                },
                ImChar {
                    point: (0, 1),
                    code: 'f',
                },
                ImChar {
                    point: (1, 0),
                    code: 'b',
                },
                ImChar {
                    point: (2, 0),
                    code: 'c',
                },
                ImChar {
                    point: (3, 0),
                    code: 'd',
                },
                ImChar {
                    point: (4, 0),
                    code: 'e',
                },
            ]
            .to_vec(),
            dimension: (5, 2),
            visible_points: 6,
            rewarding_scheme: DEFAULT_REWARDING_SCHEME,
        };
        assert_eq!(image, expected);

        image.hide((6, 6));
        assert_eq!(image.visible_points, 1);

        image.hide((2, 6));
        assert_eq!(image.visible_points, 4);

        image.hide((0, 6));
        assert_eq!(image.visible_points, 6);
    }

    #[test]
    fn test_yaml_image_parser_disclose() {
        //
        // Test yaml.
        let config: &str = "image: |1\n abcde\n f";
        let mut image = Image::from_yaml(&config).unwrap();
        //println!("{:?}",image);
        let expected = Image {
            ichars: [
                ImChar {
                    point: (0, 0),
                    code: 'a',
                },
                ImChar {
                    point: (0, 1),
                    code: 'f',
                },
                ImChar {
                    point: (1, 0),
                    code: 'b',
                },
                ImChar {
                    point: (2, 0),
                    code: 'c',
                },
                ImChar {
                    point: (3, 0),
                    code: 'd',
                },
                ImChar {
                    point: (4, 0),
                    code: 'e',
                },
            ]
            .to_vec(),
            dimension: (5, 2),
            visible_points: 6,
            rewarding_scheme: DEFAULT_REWARDING_SCHEME,
        };
        assert_eq!(image, expected);

        image.hide((6, 6));
        assert_eq!(image.visible_points, 1);

        image.hide((2, 6));
        assert_eq!(image.visible_points, 4);

        image.hide((0, 6));
        assert_eq!(image.visible_points, 6);
    }

    #[test]
    fn test_built_in_images() {
        assert_eq!(
            DEFAULT_IMAGES
                .iter()
                .map(|i| { (i, Image::from_yaml(i)) })
                .inspect(|(i, e)| if e.is_err() {
                    eprintln!("Error:{:?}\n\nImage:\n{}", e, i)
                })
                .count(),
            320 // Number of built in images!
        )
    }
    /// Test if `IMAGE_KNOWN_SIGNATURES[i].len()` is in (3.=10).
    #[test]
    fn test_image_known_signatures() {
        for sig in IMAGE_KNOWN_SIGNATURES {
            assert!(sig.len() <= 10);
            assert!(sig.len() >= 3);
        }
    }

    #[test]
    fn disclose_signature_last() {
        let image_str = "jensA\nBlisC";
        let image = Image::from(&image_str, DEFAULT_REWARDING_SCHEME).unwrap();
        //println!("{:?}",image);
        let expected = Image {
            ichars: [
                // ImChar {
                //     point: (0, 0),
                //     code: 'j', // was `j`
                // },
                ImChar {
                    point: (0, 1),
                    code: 'B',
                },
                // ImChar {
                //     point: (1, 0),
                //     code: 'e',
                // },
                // ImChar {
                //     point: (1, 1),
                //     code: 'i',
                // },
                // ImChar {
                //     point: (2, 0),
                //     code: 'n',
                // },
                // ImChar {
                //     point: (2, 1),
                //     code: 'i',
                // },
                // ImChar {
                //     point: (3, 0),
                //     code: 's',
                // },
                // ImChar {
                //     point: (3, 1),
                //     code: 's',
                // },
                ImChar {
                    point: (4, 0),
                    code: 'A',
                },
                ImChar {
                    point: (4, 1),
                    code: 'C',
                },
            ]
            .to_vec(),
            dimension: (5, 2),
            visible_points: 3,
            rewarding_scheme: DEFAULT_REWARDING_SCHEME,
        };
        assert_eq!(image, expected);
    }

    /// test game modifier spelling
    #[test]
    fn test_image_parser_error_misspelled() {
        let config = "\n\n:traditional-rewardXing";
        let dict = Image::from_proprietary(&config);
        let expected = Err(ConfigParseError::GameModifier {
            line_number: 3,
            line: ":traditional-rewardXing".to_string(),
        });
        assert_eq!(dict, expected);
    }
}
